{"version":3,"sources":["components/Header.js","components/assets/SectionHeader.js","components/assets/Input.js","components/form/Info.js","components/assets/Textbox.js","components/form/EduExp.js","components/assets/Button.js","components/form/ActionButtons.js","components/form/Education.js","components/form/WorkExp.js","components/form/Work.js","components/form/ExpertiseItem.js","components/form/Expertise.js","components/form/MainForm.js","components/view/InfoView.js","components/view/EducationView.js","components/view/WorkView.js","components/view/ExpertiseView.js","components/view/MainView.js","components/Main.js","App.js","index.js"],"names":["StyledHeader","styled","div","Header","StyledSectionHeader","h2","StyledLine","hr","SectionHeader","className","text","StyledContainer","StyledLabel","label","StyledInput","input","Input","inputId","type","labelText","placeholderText","changeHandler","inputValue","required","htmlFor","id","placeholder","value","onChange","StyledSectionContainer","StyledTwoSides","Info","user","firstName","lastName","city","email","number","portfolio","StyledTextbox","textarea","Textbox","rows","EduExp","education","schoolName","major","from","to","description","e","StyledButton","button","Button","clickHandler","onClick","StyledAddButton","StyledRemoveButton","ActionButtons","info","addInstance","removeInstance","length","Education","educationInstances","map","instance","WorkExp","work","company","position","Work","workInstances","ExpertiseItem","expertise","example","Expertise","expertiseInstances","StyledForm","form","Form","props","userInfo","changeUserInfo","changeEducation","addEducationInstance","removeEducationInstance","changeWork","addWorkInstance","removeWorkInstance","changeExpertise","addExpertiseInstance","removeExpertiseInstance","p","StyledDetails","InfoView","StyledInstance","EducationView","educationInfo","WorkView","workInfo","StyledList","ul","li","ExpertiseView","expertiseInfo","items","StyledTemplate","View","StyledMain","Main","useState","setUserInfo","setEducation","setWork","setExpertise","target","userCopy","uniqueId","targetId","slice","targetValue","newEducation","instanceCopy","educationCopy","push","uuidv4","pop","newWork","workCopy","newItems","item","itemsCopy","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3763341e.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledHeader = styled.div`\n  width: 100%;\n  background: lightblue;\n\n  h1 {\n    font-size: 3rem;\n    text-align: left;\n    padding-left: 10px;\n    margin: 15px;\n  }\n`;\n\nconst Header = () => {\n  return (\n    <StyledHeader> \n      <h1>CV builder</h1>\n    </StyledHeader>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledSectionHeader = styled.h2`\n  margin-bottom: 0;\n`;\n\nconst StyledLine = styled.hr`\n  margin-top: 0;\n  border-top: 1px solid rgb(10, 10, 10);\n`;\n\nconst SectionHeader = ({ className, text }) => {\n  return (\n    <div>\n      <StyledSectionHeader className={`sectionHeader ${className}`}>{text}</StyledSectionHeader>\n      <StyledLine />\n    </div>\n  )\n}\n\nexport default SectionHeader;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 7px 0;\n`;\n\nconst StyledLabel = styled.label`\n  font-size: 1.4rem;\n`;\n\nconst StyledInput = styled.input`\n  width: 175px;\n`;\n\nconst Input = ({ inputId, type, labelText, placeholderText, changeHandler, inputValue, required}) => {\n  return (\n    <StyledContainer>\n      <StyledLabel htmlFor={inputId}>{labelText}</StyledLabel>\n      <StyledInput \n        type={type} \n        id={inputId} \n        placeholder={placeholderText} \n        value={inputValue} \n        onChange={changeHandler} \n        required={required} \n      />\n    </StyledContainer>\n  )\n}\n\nexport default Input;","import React from 'react';\nimport styled from 'styled-components';\nimport Input from '../assets/Input';\n\nconst StyledSectionContainer = styled.div`\n  width: 70%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledTwoSides = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Info = ({ changeHandler, user }) => {\n  const { firstName, lastName, city, email, number, portfolio } = user\n\n  return (\n    <StyledSectionContainer>\n      <StyledTwoSides>\n        <Input \n          inputId=\"firstName\" \n          labelText=\"First name*\"\n          type=\"text\"\n          inputValue={firstName}\n          changeHandler={changeHandler}\n          required={true}\n        />\n        <Input \n          inputId=\"lastName\"\n          labelText=\"Last name\"\n          type=\"text\"\n          inputValue={lastName}\n          changeHandler={changeHandler}\n          required={false}\n        />\n      </StyledTwoSides>\n      <Input \n        inputId=\"city\"\n        labelText=\"City\"\n        type=\"text\"\n        inputValue={city}\n        changeHandler={changeHandler}\n        required={false}\n      />\n      <StyledTwoSides>\n        <Input \n          inputId=\"email\"\n          labelText=\"E-mail*\"\n          type=\"email\"\n          inputValue={email}\n          changeHandler={changeHandler}\n          required={true}\n        />\n        <Input \n          inputId=\"number\"\n          labelText=\"Contact number*\"\n          type=\"number\"\n          inputValue={number}\n          changeHandler={changeHandler}\n          required={true}\n        />\n      </StyledTwoSides>\n      <Input \n        inputId=\"portfolio\"\n        labelText=\"LinkedIn / Portfolio site\"\n        inputValue={portfolio}\n        changeHandler={changeHandler}\n        required={false}\n      />\n    </StyledSectionContainer>\n  )\n}\n\nexport default Info;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 7px 0;\n`;\n\nconst StyledLabel = styled.label`\n  font-size: 1.4rem;\n`;\n\nconst StyledTextbox = styled.textarea`\n  width: 80%;\n  font-family: Helvetica\n`;\n\nconst Textbox = ({ inputId, type, labelText, placeholderText, changeHandler, inputValue, required}) => {\n  return (\n    <StyledContainer>\n      <StyledLabel htmlFor={inputId}>{labelText}</StyledLabel>\n      <StyledTextbox \n        id={inputId} \n        value={inputValue} \n        onChange={changeHandler} \n        required={required}\n        rows=\"5\"\n      />\n    </StyledContainer>\n  )\n}\n\nexport default Textbox;","import React from 'react';\nimport styled from 'styled-components';\nimport Input from '../assets/Input';\nimport Textbox from '../assets/Textbox';\n\nconst StyledSectionContainer = styled.div`\n  width: 70%;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\n\nconst StyledTwoSides = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst EduExp = ({ changeHandler, education, id }) => {\n  const {schoolName, city, major, from, to, description} = education\n\n  return (\n    <StyledSectionContainer>\n      <StyledTwoSides>\n        <Input \n          inputId=\"schoolName\"\n          labelText=\"Name of Institute\"\n          inputValue={schoolName}\n          changeHandler={(e) => changeHandler(e, id)}\n          required={false}\n        />\n        <Input \n          inputId=\"city\"\n          labelText=\"City\"\n          type=\"text\"\n          inputValue={city}\n          changeHandler={(e) => changeHandler(e, id)}\n          required={false}\n        />\n      </StyledTwoSides>\n      <Input \n        inputId=\"major\"\n        labelText=\"Title of Study\"\n        type=\"text\"\n        inputValue={major}\n        changeHandler={(e) => changeHandler(e, id)}\n        required={false}\n      />\n      <StyledTwoSides>\n        <Input \n          inputId=\"from\"\n          labelText=\"Commenced Year\"\n          placeholderText=\"YYYY\"\n          type=\"number\"\n          inputValue={from}\n          changeHandler={(e) => changeHandler(e, id)}\n          required={false}\n        />\n        <Input \n          inputId=\"to\"\n          labelText=\"Expected / Graduation Year\"\n          placeholderText=\"YYYY\"\n          type=\"number\"\n          inputValue={to}\n          changeHandler={(e) => changeHandler(e, id)}\n          required={false}\n        />\n      </StyledTwoSides>\n      <Textbox\n        inputId=\"description\"\n        labelText=\"Description\"\n        inputValue={description}\n        changeHandler={(e) => changeHandler(e, id)}\n        required={false}\n      />\n    </StyledSectionContainer>\n  )\n}\n\nexport default EduExp;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  border-radius: 5px;\n  border: 1px solid black;\n  background-color: rgb(240, 240, 240);\n`;\n\nconst Button = ({ className, type, clickHandler, text}) => {\n  return (\n    <StyledButton className={className} type={type} onClick={clickHandler} >{text}</StyledButton>\n  )\n}\n\nexport default Button;","import React from 'react';\nimport Button from '../assets/Button';\nimport styled from 'styled-components';\n\nconst StyledAddButton = styled(Button)`\n  font-size: 1.5rem;\n  background: rgb(120, 255, 120);\n  &:hover {\n    background: rgb(120, 240, 120);\n  }\n  margin: 10px;\n`;\n\nconst StyledRemoveButton = styled(Button)`\n  font-size: 1.5rem;\n  background: rgb(255, 120, 120);\n  &:hover {\n    background: rgb(240, 120, 120);\n  }\n  margin: 10px;\n`;\n\nconst ActionButtons = ({ info, addInstance, removeInstance }) => {\n  return (\n    <div>\n      {info.length > 0 && \n        <StyledRemoveButton className=\"removeWork\" type=\"button\" clickHandler={removeInstance} text=\"Remove\" />\n      }\n      <StyledAddButton className=\"addWork\" type=\"button\" clickHandler={addInstance} text=\"Add\" />\n    </div>\n  )\n}\n\nexport default ActionButtons;","import React from 'react';\nimport EduExp from './EduExp';\nimport ActionButtons from './ActionButtons'\n\nconst Education = ({ changeHandler, education, addInstance, removeInstance }) => {\n  const educationInstances = education.map(instance => (\n    <EduExp\n      key={instance.id}\n      id={instance.id}\n      education={instance}\n      changeHandler={changeHandler}\n    />\n  ));\n\n  return (\n    <div>\n      {educationInstances}\n      <ActionButtons info={education} addInstance={addInstance} removeInstance={removeInstance} />\n    </div>\n  )\n}\n\nexport default Education;","import React from 'react';\nimport styled from 'styled-components';\nimport Input from '../assets/Input';\nimport Textbox from '../assets/Textbox';\n\nconst StyledSectionContainer = styled.div`\n  width: 70%;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\n\nconst StyledTwoSides = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst WorkExp = ({ changeHandler, work, id }) => {\n  const {company, city, position, from, to, description} = work\n\n  return (\n    <StyledSectionContainer>\n      <StyledTwoSides>\n        <Input \n          inputId=\"company\"\n          labelText=\"Name of Company\"\n          inputValue={company}\n          changeHandler={(e) => changeHandler(e, id)}\n          required={false}\n        />\n        <Input \n          inputId=\"city\"\n          labelText=\"City\"\n          type=\"text\"\n          inputValue={city}\n          changeHandler={(e) => changeHandler(e, id)}\n          required={false}\n        />\n      </StyledTwoSides>\n      <Input \n        inputId=\"position\"\n        labelText=\"Title of Position\"\n        type=\"text\"\n        inputValue={position}\n        changeHandler={(e) => changeHandler(e, id)}\n        required={false}\n      />\n      <StyledTwoSides>\n        <Input \n          inputId=\"from\"\n          labelText=\"From Year\"\n          placeholderText=\"YYYY\"\n          type=\"number\"\n          inputValue={from}\n          changeHandler={(e) => changeHandler(e, id)}\n          required={false}\n        />\n        <Input \n          inputId=\"to\"\n          labelText=\"To Year\"\n          placeholderText=\"YYYY\"\n          type=\"number\"\n          inputValue={to}\n          changeHandler={(e) => changeHandler(e, id)}\n          required={false}\n        />\n      </StyledTwoSides>\n      <Textbox\n        inputId=\"description\"\n        labelText=\"Description\"\n        inputValue={description}\n        changeHandler={(e) => changeHandler(e, id)}\n        required={false}\n      />\n    </StyledSectionContainer>\n  )\n}\n\nexport default WorkExp;","import React from 'react';\nimport WorkExp from './WorkExp';\nimport ActionButtons from './ActionButtons'\n\nconst Work = ({ changeHandler, work, addInstance, removeInstance }) => {\n  const workInstances = work.map(instance => (\n    <WorkExp\n      key={instance.id}\n      id={instance.id}\n      work={instance}\n      changeHandler={changeHandler}\n    />\n  ));\n\n  return (\n    <div>\n      {workInstances}\n      <ActionButtons info={work} addInstance={addInstance} removeInstance={removeInstance} />\n    </div>\n  )\n}\n\nexport default Work;","import React from 'react';\nimport styled from 'styled-components';\nimport Input from '../assets/Input';\n\nconst StyledSectionContainer = styled.div`\n  width: 100%;\n  margin-bottom: 10px;\n\n  #text {\n    width: 100%;\n    overflow-wrap: break-word;\n  }\n`;\n\nconst ExpertiseItem = ({ changeHandler, expertise, id }) => {\n  const {example} = expertise\n\n  return (\n    <StyledSectionContainer>\n      <Input \n        inputId=\"text\"\n        labelText=\"Subject\"\n        placeholderText=\"Discipline: subjects\"\n        inputValue={example}\n        changeHandler={(e) => changeHandler(e, id)}\n        required={false}\n      />\n    </StyledSectionContainer>\n  )\n}\n\nexport default ExpertiseItem","import React from 'react';\nimport ExpertiseItem from './ExpertiseItem';\nimport ActionButtons from './ActionButtons';\n\nconst Expertise = ({ changeHandler, expertise, addInstance, removeInstance }) => {\n  const expertiseInstances = expertise.map(instance => (\n    <ExpertiseItem \n      key={instance.id}\n      id={instance.id}\n      expertise={instance}\n      changeHandler={changeHandler}\n    />\n  ));\n\n  return (\n    <div>\n      {expertiseInstances}\n      <ActionButtons info={expertise} addInstance={addInstance} removeInstance={removeInstance} />\n    </div>\n  )\n}\n\nexport default Expertise","import React from 'react';\nimport styled from 'styled-components';\nimport SectionHeader from '../assets/SectionHeader';\nimport Info from './Info';\nimport Education from './Education';\nimport Work from './Work';\nimport Expertise from './Expertise';\n\nconst StyledForm = styled.form`\n  padding: 20px;\n  .sectionHeader {\n    font-size: 2rem;\n  }\n`;\n\nconst Form = (props) => {\n  const { \n    userInfo, \n    changeUserInfo, \n    education, \n    changeEducation,\n    addEducationInstance,\n    removeEducationInstance,\n    work,\n    changeWork,\n    addWorkInstance,\n    removeWorkInstance,\n    expertise,\n    changeExpertise,\n    addExpertiseInstance,\n    removeExpertiseInstance\n  } = props\n\n  return (\n    <StyledForm className=\"mainForm\">\n      <SectionHeader className=\"info\" text=\"General Info\" />\n      <Info changeHandler={changeUserInfo} user={userInfo} />\n      <SectionHeader className=\"education\" text=\"Education\" />\n      <Education changeHandler={changeEducation} education={education} addInstance={addEducationInstance} removeInstance={removeEducationInstance} />\n      <SectionHeader className=\"work\" text=\"Work Experience\" />\n      <Work changeHandler={changeWork} work={work} addInstance={addWorkInstance} removeInstance={removeWorkInstance} />\n      <SectionHeader className=\"expertise\" text=\"Expertise\" />\n      <Expertise changeHandler={changeExpertise} expertise={expertise} addInstance={addExpertiseInstance} removeInstance={removeExpertiseInstance} />\n    </StyledForm>\n  )\n}\n\nexport default Form","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledHeader = styled.p`\n  font-family: Garamond;\n  font-size: 3.2rem;\n  font-weight: bold;\n  margin: 20px 0 5px 0;\n`;\n\nconst StyledDetails = styled.div`\n  font-family: Garamond;\n  font-size: 1.3rem;\n`;\n\nconst StyledLine = styled.hr`\n  margin-top: 0;\n  border-top: 1px solid rgb(10, 10, 10);\n`;\n\nconst InfoView = ({ userInfo }) => {\n  const { firstName, lastName, city, email, number, portfolio } = userInfo\n\n  return (\n    <div>\n      <StyledHeader>{firstName} {lastName}</StyledHeader>\n      <StyledDetails>\n        {email && \n          <>\n            <span>{email}</span>\n            <span> || </span>\n            <span>{number}</span>\n          </>\n        }\n        {city && \n          <>\n          <span> || </span>\n          <span>{city}</span>\n          <span> || </span>\n          </>\n        }\n        {portfolio && <span>{portfolio}</span>}\n      </StyledDetails>\n      <StyledLine />\n    </div>\n  )\n}\n\nexport default InfoView","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledInstance = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  font-size: 1.2rem;\n\n  .titleAndDate {\n    font-size: 1.3rem;\n    font-weight: bold;\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .major {\n    font-style: italic;\n  }\n\n  .description {\n    flex: 1;\n    font-family: Georgia;\n    margin: 0;\n    padding: 0 15px;\n    overflow-wrap: break-word;\n  }\n`;\n\n\nconst EducationView = ({ educationInfo }) => {\n  const educationInstances = educationInfo.map(instance => (\n    <StyledInstance key={instance.id}>\n      <div className=\"titleAndDate\">\n        <div className=\"name\">{instance.schoolName}</div>\n        <div className=\"date\">{instance.from} - {instance.to}</div>\n      </div>\n      <div className=\"major\">{instance.major}</div>\n      {instance.description &&\n      <ul className=\"description\">\n        <li>{instance.description}</li>\n      </ul>\n      }\n    </StyledInstance>\n  ));\n\n  return (\n    <div>\n      {educationInstances}\n    </div>\n  )\n}\n\nexport default EducationView","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledInstance = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  font-size: 1.2rem;\n\n  .titleAndDate {\n    font-size: 1.3rem;\n    font-weight: bold;\n  }\n\n  .double {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .position {\n    font-style: italic;\n  }\n\n  .description {\n    font-family: Georgia;\n    margin: 5px 0 0;\n    padding: 0 15px;\n    overflow-wrap: break-word;\n  }\n`;\n\nconst WorkView = ({ workInfo }) => {\n  const workInstances = workInfo.map(instance => (\n    <StyledInstance key={instance.id}>\n      <div className=\"titleAndDate double\">\n        <div className=\"name\">{instance.company}</div>\n        <div className=\"date\">{instance.from} - {instance.to}</div>\n      </div>\n      <div className=\"position double\">\n        <div>{instance.position}</div>\n        <div>{instance.city}</div>\n      </div>\n      {instance.description && \n        <ul className=\"description\">\n          <li>{instance.description}</li>\n        </ul>\n      }\n    </StyledInstance>\n  ))\n  return (\n    <div>\n      {workInstances}\n    </div>\n  )\n}\n\nexport default WorkView;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledList = styled.ul`\n  padding: 0 15px;\n`;\n\nconst StyledInstance = styled.li`\n  font-family: Georgia;\n  margin: 5px 0 0;\n`;\n\nconst ExpertiseView = ({ expertiseInfo }) => {\n  const expertiseInstances = expertiseInfo.items.map(instance => (\n    <StyledInstance key={instance.id}>\n      {instance.example}\n    </StyledInstance>\n  ))\n\n  return (\n    <StyledList>\n      {expertiseInstances}\n    </StyledList>\n  )\n}\n\nexport default ExpertiseView","import React from 'react';\nimport SectionHeader from '../assets/SectionHeader';\nimport InfoView from './InfoView';\nimport styled from 'styled-components';\nimport EducationView from './EducationView';\nimport WorkView from './WorkView';\nimport ExpertiseView from './ExpertiseView';\n\nconst StyledTemplate = styled.div`\n  font-family: Garamond;\n  font-size: 1.1rem;\n  padding: 0 20px;\n  display: flex;\n  flex-direction: column;\n  height: 877px;\n`;\n\nconst View = (props) => {\n  const { userInfo, educationInfo, workInfo, expertiseInfo } = props\n  return (\n    <StyledTemplate>\n      <InfoView userInfo={userInfo} />\n      {educationInfo.length > 0 && \n        <>\n          <SectionHeader className=\"educationView\" text=\"EDUCATION\" />\n          <EducationView educationInfo={educationInfo} />\n        </>\n      }\n      {workInfo.length > 0 && \n        <>\n          <SectionHeader className=\"workView\" text=\"WORK EXPERIENCE\"/>\n          <WorkView workInfo={workInfo} />\n        </>\n      }\n      {expertiseInfo.items.length > 0 &&\n        <>\n          <SectionHeader className=\"expertiseView\" text=\"EXPERTISE\" />\n          <ExpertiseView expertiseInfo={expertiseInfo} />\n        </>\n      }\n    </StyledTemplate>\n  )\n}\n\nexport default View;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Form from './form/MainForm';\nimport View from './view/MainView';\n// import DownloadButton from './view/DownloadButton';\"\" TEMPORARY\nimport {v4 as uuidv4} from 'uuid';\n\nconst StyledMain = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: 1320px) {\n    flex-direction: row;\n    justify-content: space-around;\n\n    .mainView {\n      max-height: 877px;\n      position: sticky;\n      top: 50px;\n    }\n  }\n`;\n\nconst StyledContainer = styled.div`\n  border: 1px solid green;\n  width: 620px;\n  margin: 30px 20px;\n`;\n\nconst Main = () => {\n  const [userInfo, setUserInfo] = useState(\n    {\n      firstName: \"\",\n      lastName: \"\",\n      city: \"\",\n      email: \"\",\n      number: \"\",\n      portfolio: \"\",\n    }\n  );\n  const [education, setEducation] = useState([]);\n  const [work, setWork] = useState([]);\n  const [expertise, setExpertise] = useState({\n    expertise: \"\",\n    portfolio : \"\",\n    items: []\n  })\n\n  const changeUserInfo = (e) => {\n    const id = e.target.id\n    const value = e.target.value\n    let userCopy = {...userInfo}\n    userCopy[id] = value\n    setUserInfo(userCopy)\n  }\n\n  const changeEducation = (e, uniqueId) => {\n    const targetId = e.target.id\n    if (targetId === 'from' || targetId === 'to') {\n      e.target.value = e.target.value.slice(0, 4)\n    }\n    const targetValue = e.target.value\n    const newEducation = education.map(instance => {\n      if (instance.id === uniqueId) {\n        let instanceCopy = {...instance}\n        instanceCopy[targetId] = targetValue\n        return instanceCopy\n      }\n      return instance\n    })\n    setEducation(newEducation)\n  }\n\n  const addEducationInstance = () => {\n    const educationCopy = [...education]\n    educationCopy.push(\n      {\n        id: uuidv4(),\n        schoolName: \"\",\n        city: \"\",\n        major: \"\",\n        from: \"\",\n        to: \"\",\n        description: \"\",\n      },\n    )\n    setEducation(educationCopy)\n  }\n\n  const removeEducationInstance = () => {\n    const educationCopy = [...education]\n    educationCopy.pop()\n    setEducation(educationCopy)\n  }\n\n  const changeWork = (e, uniqueId) => {\n    const targetId = e.target.id\n    if (targetId === 'from' || targetId === 'to') {\n      e.target.value = e.target.value.slice(0, 4)\n    }\n    const targetValue = e.target.value\n    const newWork = work.map(instance => {\n      if (instance.id === uniqueId) {\n        let instanceCopy = {...instance}\n        instanceCopy[targetId] = targetValue\n        return instanceCopy\n      }\n      return instance\n    })\n    setWork(newWork)\n  }\n\n  const addWorkInstance = () => {\n    const workCopy = [...work]\n    workCopy.push(\n      {\n        id: uuidv4(),\n        company: \"\",\n        position: \"\",\n        city: \"\",\n        from: \"\",\n        to: \"\",\n        description: \"\",\n      },\n    )\n    setWork(workCopy)\n  }\n\n  const removeWorkInstance = () => {\n    const workCopy = [...work]\n    workCopy.pop()\n    setWork(workCopy)\n  }\n\n  const addExpertiseInstance = () => {\n    let itemsCopy = [...expertise.items]\n    itemsCopy.push(\n      {\n        id: uuidv4(),\n        example: \"\",\n      },\n    )\n    setExpertise({...expertise, items: itemsCopy})\n  }\n\n  const removeExpertiseInstance = () => {\n    let itemsCopy = [...expertise.items]\n    itemsCopy.pop()\n    setExpertise({...expertise, items: itemsCopy})\n  }\n\n  const changeExpertise = (e, uniqueId) => {\n    const targetValue = e.target.value\n    let items = expertise.items\n    const newItems = items.map(item => {\n      if (item.id === uniqueId) {\n        item.example = targetValue\n      }\n      return item\n    })\n    setExpertise({...expertise, items: newItems})\n  }\n\n  return (\n    <StyledMain>\n      <StyledContainer className=\"mainContainer\">\n        <Form\n          userInfo={userInfo}\n          changeUserInfo={changeUserInfo}\n          education={education}\n          changeEducation={changeEducation}\n          addEducationInstance={addEducationInstance}\n          removeEducationInstance={removeEducationInstance}\n          work={work}\n          changeWork={changeWork}\n          addWorkInstance={addWorkInstance}\n          removeWorkInstance={removeWorkInstance}\n          expertise={expertise.items}\n          changeExpertise={changeExpertise}\n          addExpertiseInstance={addExpertiseInstance}\n          removeExpertiseInstance={removeExpertiseInstance}\n        />\n      </StyledContainer>\n      <StyledContainer className=\"mainView\">\n        {/*<DownloadButton />*/\"\"}\n        <View \n          userInfo={userInfo}\n          educationInfo={education}\n          workInfo={work}\n          expertiseInfo={expertise}\n        />\n      </StyledContainer>\n    </StyledMain>\n  )\n}\n\nexport default Main;","import React from 'react';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  :root,\n  body {\n    font-family: Helvetica;\n    font-size : 10px;\n    background: rgb(250, 250, 250);\n    margin: 0;\n  }\n\n  .content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst App = () => {\n  return (\n    <div className=\"content\">\n      <GlobalStyle />\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}